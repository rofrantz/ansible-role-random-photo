# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

ansibleGalaxyRole = File.basename(File.expand_path("../..", Dir.pwd))

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

	#config.vm.box = "geerlingguy/ubuntu1604"
	config.vm.box = "ubuntu/xenial64"

    config.vm.hostname = "ansible-role-random-photo.vm"
    config.vm.network "forwarded_port", guest: 8096, host: 8096

    config.vm.define ansibleGalaxyRole do |host|
    end
	config.vm.box_check_update = false

    # configs for vagrant-cachier
    if Vagrant.has_plugin?("vagrant-cachier")
       config.cache.auto_detect = true
    end

     # configs for vagrant-hostmanager
     if Vagrant.has_plugin?("vagrant-hostmanager")
        config.hostmanager.manage_host = true
     end

	config.ssh.forward_agent = true

	config.vm.provider :virtualbox do |vb|
		vb.customize ["modifyvm", :id, "--memory", 1024]
		vb.customize ["modifyvm", :id, "--cpus", 1]

		vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
		vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
	end

	# Test "build" tag
	config.vm.provision "ansible" do |ansible|
		ansible.playbook = "test.yml"
		ansible.sudo = true
		ansible.tags = [ "build", "random-photo" ]
		ansible.verbose = "#{ENV['VERBOSE']}" if ENV['VERBOSE']
		ansible.raw_arguments = ['-e', 'ansible_python_interpreter=/usr/bin/python3']
	end

	# Test "configure" tag
	config.vm.provision "ansible" do |ansible|
		ansible.playbook = "test.yml"
		ansible.tags = [ "assert" ]
		ansible.verbose = "#{ENV['VERBOSE']}" if ENV['VERBOSE']
	end
end
